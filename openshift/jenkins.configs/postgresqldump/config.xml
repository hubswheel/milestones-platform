<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Dump database to directory /var/lib/pgsql/data/dump.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>7</daysToKeep>
        <numToKeep>-1</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>@midnight</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# Get name of a currently deployed pod by label and index.
POD_INSTANCE_NAME=`oc get pods \
  -l &quot;name=postgresql&quot; \
  --template &quot;{{ with index .items 0 }}{{ .metadata.name }}{{ end }}&quot;`

# Construct a filename for the dump file.
DUMP_FILENAME=`oc exec &quot;$POD_INSTANCE_NAME&quot; -i -- bash -c &quot;echo  /var/lib/pgsql/data/dump/\\$POSTGRESQL_DATABASE.$(date +\&quot;%Y%m%dT%H%M%S\&quot;).dump&quot;`
echo &quot;DUMP_FILENAME=$DUMP_FILENAME&quot;

# Export the database to a dump file.
oc exec &quot;$POD_INSTANCE_NAME&quot; -i -- bash -c &quot;pg_dump --format=custom -w \$POSTGRESQL_DATABASE &gt; $DUMP_FILENAME&quot;
EXIT_STATUS=$?
echo &quot;Exit status: $EXIT_STATUS&quot;

# Set exit status so Jenkins knows whether or not the job succeeded.
exit $EXIT_STATUS
      </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>